plugins {
    id 'com.android.application'
    id 'kotlin-android'

    // Added plugin id
    id 'org.jetbrains.dokka'
    id 'kotlinx-serialization'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.searchSummarizer"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.6.10'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.RequiresOptIn"
}

configurations {
    ktlint
}

dependencies {

    implementation "androidx.core:core-ktx:$ktx_core_version"
    implementation "androidx.appcompat:appcompat:$appcompat_versionn"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    // Added dependencies
    ktlint "com.pinterest:ktlint:$ktlint_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_systemuicontroller_version"
    implementation "com.google.accompanist:accompanist-insets:$accompanist_insets"
    implementation "io.coil-kt:coil-compose:$coil_compose_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    implementation "androidx.webkit:webkit:$webkit_version"
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_json_version"
    implementation "io.ktor:ktor-client-core:$ktor_client_version"
    implementation "io.ktor:ktor-client-android:$ktor_client_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_client_version"
    implementation "io.ktor:ktor-client-logging:$ktor_client_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_client_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_android_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

tasks.dokkaHtml.configure {
    outputDirectory.set(file("$buildDir/kdoc"))
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "src/**/*.kt", "android", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint/ktlint-result.xml"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "-F", "src/**/*.kt", "android", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint/ktlint-result.xml"
    ignoreExitValue true
}
